/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define MEDIA 2
#define NUM 3
#define SYM 4
#define FUN 5

/ {
        keymap {
                compatible = "zmk,keymap";

                BASE {
                        bindings = <
   &kp TAB   &kp Q      &kp W       &kp E        &kp R         &kp T            &kp Y         &kp U        &kp I       &kp O    &kp P         &kp BSPC
   &kp LCTRL &mt LGUI A &mt LALT S &mt LCTRL D   &mt LSHIFT F  &kp G            &kp H         &mt RSHIFT J &mt RCTRL K &mt RALT L &mt RGUI SEMI &kp SQT
   &kp LSHFT &kp Z      &kp X      &kp C         &kp V         &kp B            &kp N         &kp M        &kp COMMA   &kp DOT  &kp FSLH      &kp ESC
                                   &lt MEDIA ESC &lt NAV SPACE &kp TAB          &lt SYM ENTER &lt NUM BSPC &lt FUN DEL
                        >;
                };

                NAV {
                        bindings = <
   &trans &trans   &trans   &trans    &trans     &trans    &kp K_PASTE &kp K_COPY  &kp K_CUT &kp K_UNDO &kp K_REDO &trans
   &trans &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &trans    &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT  &kp CAPS   &trans
   &trans &trans   &trans   &trans    &trans     &trans    &kp HOME    &kp PG_DN   &kp PG_UP &kp END    &kp INS    &trans
                            &trans    &trans     &trans    &trans &trans &trans
                        >;
                };

                MEDIA {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                    &trans  &trans           &trans       &trans       &trans     &trans
   &trans &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &trans         &trans  &kp C_PREV       &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans
   &trans &trans &trans &trans &trans &trans                    &trans  &trans           &trans       &trans       &trans     &trans
                        &trans &trans &trans                    &C_STOP &kp C_PLAY_PAUSE &kp C_MUTE
                        >;
                };

                NUM {
                        bindings = <
   &trans &kp LBKT &kp N7 &kp N8  &kp N9 &kp RBKT    &trans &trans     &trans    &trans   &trans   &trans
   &trans &kp SEMI &kp N4 &kp N5  &kp N6 &kp EQUAL   &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &trans
   &trans &kp SQT  &kp N1 &kp N2  &kp N3 &kp BSLH    &trans &trans     &trans    &trans   &trans   &trans
                          &kp DOT &kp N0 &trans      &trans &trans     &trans
                        >;
                };

                SYM {
                        bindings = <
   &trans &kp LBRC  &kp AMPS   &kp STAR    &kp LPAR  &kp RBRC          &trans &trans     &trans    &trans   &trans   &trans
   &trans &kp COLON &kp DOLLAR &kp PERCENT &kp CARET &kp PLUS          &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &trans
   &trans &kp TILDE &kp EXCL   &kp AT      &kp HASH  &kp PIPE          &trans &trans     &trans    &trans   &trans   &trans
                               &kp LPAR    &kp RPAR  &kp UNDER         &trans &trans     &trans
                        >;
                };

                FUN {
                        bindings = <
   &trans &kp F12 &kp F7 &kp F8   &kp F9   &kp PSCRN            &trans &trans     &trans    &trans   &trans   &trans
   &trans &kp F11 &kp F4 &kp F5   &kp F6   &kp SLCK             &trans &kp RSHIFT &kp RCTRL &kp RALT &kp RGUI &trans
   &trans &kp F10 &kp F1 &kp F2   &kp F3   &kp PAUSE_BREAK      &trans &trans     &trans    &trans   &trans   &trans
                         &kp LPAR &kp RPAR &kp UNDER            &trans &trans     &trans
                        >;
                };
        };
};
